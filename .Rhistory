library(datasets)
library(datasets)
?mtcars
# Clear mind :)
install.packages("pacman")
require(pacman)
library(pacman)
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes, ggviz, httr, lubridate, plotly, rio, rmarkdown, shiny, stringr, tidyr)
# I recommend "pacman" for managing add-on packages. It will
# install packages, if needed, and then load the packages.
install.packages("pacman")
# Then load the package by using either of the following:
require(pacman)  # Gives a confirmation message.
library(pacman)  # No message.
# Or, by using "pacman::p_load" you can use the p_load
# function from pacman without actually loading pacman.
# These are packages I load every time.
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes,
ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny,
stringr, tidyr)
library(datasets)  # Load/unload base packages manually
# Clear packages
p_unload(dplyr, tidyr, stringr) # Clear specific packages
p_unload(all)  # Easier: clears all add-ons
detach("package:datasets", unload = TRUE)  # For base
# Clear mind :)
install.packages("pacman")
library(pacman)
# Or, by using "pacman::p_load" you can use the p_load
# function from pacman without actually loading pacman.
# These are packages I load every time.
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes,
ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny,
stringr, tidyr)
library(datasets)  # Load/unload base packages manually
rio_csv <- import("~/Desktop/Data Science Salary 2021 to 2023.csv")
rio_csv <- import("~/Desktop/Data Science Salary 2021 to 2023.csv")
library(pacman)  # No message.
# Or, by using "pacman::p_load" you can use the p_load
# function from pacman without actually loading pacman.
# These are packages I load every time.
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes,
ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny,
stringr, tidyr)
rio_csv <- import("C:\Users\Zain\Documents\GitHub")
rio_csv <- import("C:\Users\Zain\Documents\GitHub\Data Science Salary 2021 to 2023.csv")
rio_csv <- import("C:/Users/Zain/Documents/GitHub/Data Science Salary 2021 to 2023.csv")
head(rio_csv)
head(rio_csv)
1+1
a=1
b=1
a+b
a=1
b=1
a+b
a=1
b=1
a+b
library(pacman)  # No message.
# Or, by using "pacman::p_load" you can use the p_load
# function from pacman without actually loading pacman.
# These are packages I load every time.
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes,
ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny,
stringr, tidyr)
rio_csv <- import("C:/Users/Zain/Documents/GitHub/Data Science Salary 2021 to 2023.csv")
rio_csv <- import("C:/Users/Zain/Documents/Team Research and Dev Project/Data Science Salary 2021 to 2023.csv")
head(rio_csv)
library(pacman)  # No message.
# Or, by using "pacman::p_load" you can use the p_load
# function from pacman without actually loading pacman.
# These are packages I load every time.
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes,
ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny,
stringr, tidyr)
rio_csv <- import("C:/Users/Zain/Documents/Team Research and Dev Project/Data Science Salary 2021 to 2023.csv")
head(rio_csv)
?plot
library(datasets)
?plot(rio_csv)
plot(rio_csv)
plot (rio_csv$salary)
plot(rio_csv$salary_in_usd)
plot(rio_csv$experience_level)
plot(rio_csv$work_year)
plot(rio_csv$company_size)
plot(rio_csv$work_year, rio_csv$salary_in_usd)
plot (rio_csv$salary)
plot(rio_csv$experience_level, rio_csv$salary_in_usd)
barplot(rio_csv$experience_level, rio_csv$salary_in_usd)
hist(rio_csv$experience_level, rio_csv$salary_in_usd)
hist(rio_csv$salary_in_usd,rio_csv$experience_level)
hist(rio_csv$salary_in_usd)
hist(hist(rio_csv$experience_level)
hist(rio_csv$experience_level)
hist(rio_csv$experience_level)
hist(rio_csv$job_title)
plot(rio_csv$job_title)
df
df <-
rio_csv  %>% #l
group_by(type)            %>% #r
summarise(experience_level = n())
group_by(experience_level)  %>%
summarise(volume = n())
df <-
rio_csv
df <-
rio_csv
group_by(experience_level)  %>%
summarise(volume = n())     %>%
df
group_by(experience_level)  %>%
summarise(volume = n())     %>%
df
df <- rio_csv                 %>%
group_by(experience_level)  %>%
summarise(volume = n())     %>%
df
lol <- rio_csv                 %>%
group_by(experience_level)  %>%
summarise(volume = n())     %>%
lol
lol <- rio_csv                 %>%
group_by(experience_level)  %>%
summarise(volume = n())     %>%
head(lol)
lol <- rio_csv                 %>%
group_by(experience_level)  %>%
summarise(volume = n())     %>%
head(lol)
getwd()
setwd("C:/Users/Zain/Documents/Team Research and Dev Project)
readfile <- read.csv("Data Science Salary 2021 to 2023.csv")
setwd("C:/Users/Zain/Documents/Team Research and Dev Project)
readfile <- read.csv("Data Science Salary 2021 to 2023.csv")
setwd("C:/Users/Zain/Documents/Team Research and Dev Project")
readfile <- read.csv("Data Science Salary 2021 to 2023.csv")
lol <- rio_csv                 %>%
group_by(experience_level)  %>%
summarise(volume = n())     %>%
arrange(desc(volume))
plot(lol)
tbdata <- table(rio_csv$experience_level)
barplot(tbdata)
plot(rio_csv$salary_in_usd , tbdata)
tbdata1 <- table(rio_csv$salary_in_usd)
plot(tbdata , tbdata1)
barplot(tbdata , tbdata1)
barplot(tbdata , tbdata1)
hist(tbdata , tbdata1)
plot(tbdata, rio_csv$salary_in_usd)
ggplot(rio_csv, aes(x = experience_level, y = salary_in_usd, fill = experience_level)) +
geom_boxplot() +
labs(title = "Salary Distribution by Experience Level", x = "Experience Level", y = "Salary (USD)") +
theme_minimal() +
theme(legend.position = "none")
ggplot(data, aes(x = salary_in_usd, fill = experience_level)) +
geom_histogram(binwidth = 5000, color = "black", alpha = 0.7) +
labs(title = "Salary Distribution by Experience Level", x = "Salary (USD)", y = "Count") +
theme_minimal() +
facet_wrap(~experience_level)
ggplot(rio_csv, aes(x = salary_in_usd, fill = experience_level)) +
geom_histogram(binwidth = 5000, color = "black", alpha = 0.7) +
labs(title = "Salary Distribution by Experience Level", x = "Salary (USD)", y = "Count") +
theme_minimal() +
facet_wrap(~experience_level)
ggplot(rio_csv, aes(x = experience_level, y = salary_in_usd, fill = experience_level)) +
geom_boxplot() +
labs(title = "Salary Distribution by Experience Level", x = "Experience Level", y = "Salary (USD)") +
theme_minimal() +
theme(legend.position = "none")
ggplot(rio_csv, aes(x = salary_in_usd, fill = experience_level)) +
geom_histogram(binwidth = 5000, color = "black", alpha = 0.7) +
labs(title = "Salary Distribution by Experience Level", x = "Salary (USD)", y = "Count") +
theme_minimal() +
facet_wrap(~experience_level)
plot(rio_csv$work_year, rio_csv$salary_in_usd)
library(pacman)  # No message.
# Or, by using "pacman::p_load" you can use the p_load
# function from pacman without actually loading pacman.
# These are packages I load every time.
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes,
ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny,
stringr, tidyr)
rio_csv <- import("C:/Users/Zain/Documents/Team Research and Dev Project/Data Science Salary 2021 to 2023.csv")
head(rio_csv)
ggplot(rio_csv, aes(x = experience_level, y = salary_in_usd, fill = experience_level)) +
geom_boxplot() +
labs(title = "Salary Distribution by Experience Level", x = "Experience Level", y = "Salary (USD)") +
theme_minimal() +
theme(legend.position = "none")
ggplot(rio_csv, aes(x = salary_in_usd, fill = experience_level)) +
geom_histogram(binwidth = 5000, color = "black", alpha = 0.7) +
labs(title = "Salary Distribution by Experience Level", x = "Salary (USD)", y = "Count") +
theme_minimal() +
facet_wrap(~experience_level)
ggplot(rio_csv, aes(x = experience_level, y = salary_in_usd, fill = experience_level)) +
geom_plot() +
labs(title = "Salary Distribution by Experience Level", x = "Experience Level", y = "Salary (USD)") +
theme_minimal() +
theme(legend.position = "none")
ggplot(rio_csv, aes(x = experience_level, y = salary_in_usd, fill = experience_level)) +
geom_line() +
labs(title = "Salary Distribution by Experience Level", x = "Experience Level", y = "Salary (USD)") +
theme_minimal() +
theme(legend.position = "none")
ggplot(rio_csv, aes(x = experience_level, y = salary_in_usd, fill = experience_level)) +
geom_boxplot() +
labs(title = "Salary Distribution by Experience Level", x = "Experience Level", y = "Salary (USD)") +
theme_minimal() +
theme(legend.position = "none")
library(pacman)  # No message.
# Or, by using "pacman::p_load" you can use the p_load
# function from pacman without actually loading pacman.
# These are packages I load every time.
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes,
ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny,
stringr, tidyr)
rio_csv <- import("https://raw.githubusercontent.com/Zain-Butt20/Team-Research-and-Dev-Project-A13-7COM1079/refs/heads/main/Data%20Science%20Salary%202021%20to%202023.csv")
head(rio_csv)
plot(rio_csv$work_year)
plot(rio_csv$work_year)
plot(rio_csv$work_year, rio_csv$salary_in_usd)
hist(rio_csv$salary_in_usd)
plot(rio_csv$salary_in_usd)
plot(rio_csv$experience_level)
ggplot(rio_csv, aes(x = experience_level, y = salary_in_usd, fill = experience_level)) +
geom_boxplot() +
labs(title = "Salary Distribution by Experience Level", x = "Experience Level", y = "Salary (USD)") +
theme_minimal() +
theme(legend.position = "none")
ggplot(rio_csv, aes(x = salary_in_usd, fill = experience_level)) +
geom_histogram(binwidth = 5000, color = "black", alpha = 0.7) +
labs(title = "Salary Distribution by Experience Level", x = "Salary (USD)", y = "Count") +
theme_minimal() +
facet_wrap(~experience_level)
ggplot(rio_csv, aes(x = experience_level, y = salary_in_usd, fill = experience_level)) +
geom_line() +
labs(title = "Salary Distribution by Experience Level", x = "Experience Level", y = "Salary (USD)") +
theme_minimal() +
theme(legend.position = "none")
ggplot(rio_csv, aes(x = experience_level, y = salary_in_usd, fill = experience_level)) +
geom_point() +
labs(title = "Salary Distribution by Experience Level", x = "Experience Level", y = "Salary (USD)") +
theme_minimal() +
theme(legend.position = "none")
ggplot(rio_csv, aes(x = experience_level, fill = experience_level)) +
geom_bar() +
labs(title = "Frequency of Experience Levels", x = "Experience Level", y = "Frequency") +
theme_minimal() +
theme(legend.position = "none")
# SAVE CSV FILE TO DATAFRAME
df<- rio_csv
#SAVE EACH CLASS OF EXPERIENCE LEVEL INDEPENDENTLY
entry_level <- subset(df, experience_level == "EN")
experienced_level <- subset(df, experience_level == "EX")
mid_level <- subset(df, experience_level == "MI")
senior_level <- subset(df, experience_level == "SE")
#PLOT EACH LEVEL SEPERATELY AGAINST SALARY
ggplot(entry_level, aes(x = salary_in_usd)) +
geom_histogram(binwidth = 5000, fill = "skyblue", color = "black") +
labs(title = "Frequency of Salaries for Entry-Level Employees", x = "Salary (USD)", y = "Frequency") +
theme_minimal()
ggplot(entry_level, aes(x = salary_in_usd)) +
geom_freqpoly(binwidth = 5000, color = "blue", size = 1.2) +
labs(title = "Frequency of Salaries for Entry-Level Employees", x = "Salary (USD)", y = "Frequency") +
theme_minimal()
ggplot(experienced_level, aes(x = salary_in_usd)) +
geom_histogram(binwidth = 5000, fill = "skyblue", color = "black") +
labs(title = "Frequency of Salaries for Employees", x = "Salary (USD)", y = "Frequency") +
theme_minimal()
ggplot(mid_level, aes(x = salary_in_usd)) +
geom_histogram(binwidth = 5000, fill = "skyblue", color = "black") +
labs(title = "Frequency of Salaries for Entry-Level Employees", x = "Salary (USD)", y = "Frequency") +
theme_minimal()
ggplot(senior_level, aes(x = salary_in_usd)) +
geom_histogram(binwidth = 5000, fill = "skyblue", color = "black") +
labs(title = "Frequency of Salaries for Entry-Level Employees", x = "Salary (USD)", y = "Frequency") +
theme_minimal()
df1 <- rio_csv
names(df1)[1] <- "year"
names(df1)[7] <- "salary"
names(df1)[8] <- "location"
names(df1)[9] <- "size"
df_year <- subset(df1,year==2023)
entry <- subset(df_year, experience_level == "EN")
experienced <- subset(df_year, experience_level == "EX")
mid <- subset(df_year, experience_level == "MI")
senior <- subset(df_year, experience_level == "SE")
ggplot(df_year, aes(x = experience_level, y = salary, fill = experience_level)) +
geom_boxplot() +
labs(title = "Salary Distribution by Experience Level", x = "Experience Level", y = "Salary (USD)") +
theme_minimal() +
theme(legend.position = "none")
df$entrylevel<-df$experience_level=="EN"
df$experincedlevel<-df$experience_level=="EX"
df$midlevel<-df$experience_level=="MI"
df$seniorlevel<-df$experience_level=="SE"
hist(df$salary)
wilcox.test(df$salary ~ df$entrylevel)
t.test(df$salary_in_usd ~ df$entrylevel)
